server { 
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    server_name             localhost;
    ssl_certificate         /root/ssl/cert.pem;
    ssl_certificate_key     /root/ssl/key.pem;

    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri $uri/ =404;
    }
    
    # SQL Injection simulation endpoint - more permissive to allow SQL injection payloads
    location ~ ^/user/(.+)$ {
        return 200 "User ID: $1";
        add_header Content-Type text/plain;
    }
    
    # Command Injection simulation endpoint
    location ~ ^/cmd/(.*)$ {
        return 200 "Command Executed: $1";
        add_header Content-Type text/plain;
    }
    
    # Path Traversal simulation endpoint
    location ~ ^/include/(.*)$ {
        return 200 "File Included: $1";
        add_header Content-Type text/plain;
    }
    
    # Malicious file downloads
    location = /download/malware.exe {
        alias /usr/share/nginx/html/eicar.com;
        add_header Content-Disposition "attachment; filename=malware.exe";
        add_header Content-Type application/octet-stream;
    }
    
    location = /download/backdoor.php {
        alias /usr/share/nginx/html/backdoor.php;
        add_header Content-Type text/plain;
    }
    
    # EICAR test file direct access
    location = /eicar.com {
        alias /usr/share/nginx/html/eicar.com;
        add_header Content-Type application/octet-stream;
    }
    
    # JavaScript files that would trigger threat detection
    location ~ \.(js|php|com)$ {
        try_files $uri =404;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    
    # Vulnerable to SQL injection simulation
    location ~ ^/sql-inject/([0-9]+)$ {
        return 200 "SQL Query Results for ID: $1";
        add_header Content-Type text/plain;
    }
    
    # Rest of traffic redirected to HTTPS
    location / {
        return 302 https://$server_name$request_uri;
    }
}